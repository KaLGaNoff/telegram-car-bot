import os
import logging
from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler

import gspread
from google.oauth2.service_account import Credentials
from gspread_formatting import CellFormat, TextFormat, Borders, format_cell_range

# ====== –õ–æ–≥—É–≤–∞–Ω–Ω—è ======
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

# ====== ENV ======
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, https://your-app.onrender.com/webhook
PORT = int(os.getenv("PORT", 10000))

if not BOT_TOKEN:
    raise RuntimeError("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")
if not WEBHOOK_URL:
    raise RuntimeError("‚ùå WEBHOOK_URL –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")

# ====== –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –æ–¥—Ä–∞–∑—É ======
application = Application.builder().token(BOT_TOKEN).build()

# ====== Google Sheets ======
SCOPES = ["https://www.googleapis.com/auth/spreadsheets"]
creds = Credentials.from_service_account_file("service_account.json", scopes=SCOPES)
client = gspread.authorize(creds)
sheet = client.open("–ù–∞–∑–≤–∞_–¢–≤–æ—î—ó_–¢–∞–±–ª–∏—Ü—ñ").sheet1

# ====== –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è Telegram ======
async def start(update: Update, context):
    await update.message.reply_text("‚úÖ –ë–æ—Ç –ø—Ä–∞—Ü—é—î!")

# –ü—Ä–∏–∫–ª–∞–¥ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def echo(update: Update, context):
    await update.message.reply_text(f"–í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏: {update.message.text}")

# ====== –î–æ–¥–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏ ======
application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

# ====== FastAPI ======
app = FastAPI()

@app.on_event("startup")
async def startup_event():
    logger.info("üöÄ –°—Ç–∞—Ä—Ç—É—î–º–æ —Ç–∞ —Å—Ç–∞–≤–∏–º–æ –≤–µ–±—Ö—É–∫...")
    await application.bot.set_webhook(url=f"{WEBHOOK_URL}/webhook")
    logger.info(f"üåê –í–µ–±—Ö—É–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {WEBHOOK_URL}/webhook")

@app.post("/webhook")
async def telegram_webhook(req: Request):
    data = await req.json()
    update = Update.de_json(data, application.bot)
    await application.process_update(update)
    return {"status": "ok"}

@app.get("/")
async def root():
    return {"status": "Bot is running"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=PORT)
